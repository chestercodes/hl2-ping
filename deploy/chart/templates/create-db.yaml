apiVersion: batch/v1
kind: Job
metadata:
  name: "hl2-ping-create-db"
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "-7"
spec:
  template:
    spec:
      containers:
        - name: run
          image: postgres:14
          command:
            - "bash"
            - "-c"
            - |
              cd /tmp/run
              cp *.sql /etc/safedir/
              cd /etc/safedir
              chmod 777 *.sql
              psql -tc "SELECT 1 FROM pg_database WHERE datname = 'pingapp'" | grep -q 1 || psql -f create-pingapp.sql
              sed -i "s#PG_PINGAPP_PWD#$PG_PINGAPP_PWD#g" create-user.sql
              sed -i "s#PG_PINGAPP_USERNAME#$PG_PINGAPP_USERNAME#g" create-user.sql
              sed -i "s#PG_PINGAPP_USERNAME#$PG_PINGAPP_USERNAME#g" setup-pingapp.sql
              psql -f create-user.sql
              psql -d pingapp -f setup-pingapp.sql

          volumeMounts:
            - name: runvol
              mountPath: /tmp/run
            - name: safedir
              mountPath: /etc/safedir
          env:
            - name: PGHOST
              value: maindb
            - name: PGDATABASE
              value: postgres
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: maindb-postgresql
                  key: postgres-password
            - name: PG_PINGAPP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: maindb-ping
                  key: ping-api-username
            - name: PG_PINGAPP_PWD
              valueFrom:
                secretKeyRef:
                  name: maindb-ping
                  key: ping-api-password
      volumes:
        - name: runvol
          configMap:
            name: hl2-ping-create-db-setup-script
            items:
              - key: create-pingapp.sql
                path: create-pingapp.sql
              - key: create-user.sql
                path: create-user.sql
              - key: setup-pingapp.sql
                path: setup-pingapp.sql
        - name: safedir
          emptyDir: {}
      restartPolicy: Never
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: hl2-ping-create-db-setup-script
  annotations:
    argocd.argoproj.io/hook: PreSync
    # argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "-8"
data:
  create-pingapp.sql: |
    CREATE DATABASE pingapp
        WITH
        OWNER = postgres
        ENCODING = 'UTF8'
        LC_COLLATE = 'en_US.UTF-8'
        LC_CTYPE = 'en_US.UTF-8'
        TABLESPACE = pg_default
        CONNECTION LIMIT = -1
        IS_TEMPLATE = False;
  create-user.sql: |
    CREATE OR REPLACE FUNCTION __tmp_create_user() returns void as $$
    BEGIN
      IF NOT EXISTS (
              SELECT FROM   pg_catalog.pg_user
              WHERE  usename = 'PG_PINGAPP_USERNAME') THEN
        CREATE USER PG_PINGAPP_USERNAME;
      END IF;

    END;
    $$ language plpgsql;

    SELECT __tmp_create_user();
    DROP FUNCTION __tmp_create_user();

    ALTER USER PG_PINGAPP_USERNAME WITH PASSWORD 'PG_PINGAPP_PWD';
    ALTER USER PG_PINGAPP_USERNAME SET SEARCH_PATH TO pingapp,pg_catalog,public;

    GRANT ALL ON DATABASE pingapp TO migrations;
    GRANT CONNECT ON DATABASE pingapp TO migrations;

  setup-pingapp.sql: |
    GRANT ALL ON DATABASE pingapp TO PG_PINGAPP_USERNAME;

    GRANT CONNECT ON DATABASE pingapp TO PG_PINGAPP_USERNAME;

    GRANT SELECT, INSERT, UPDATE, DELETE
      ON ALL TABLES IN SCHEMA public 
      TO PG_PINGAPP_USERNAME;

